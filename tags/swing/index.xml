<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Swing - 标签 - 蓝狐狸的博客</title>
    <link>https://lanhuli.top/tags/swing/</link>
    <description>Swing - 标签 | 蓝狐狸的博客</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 30 Jul 2023 03:18:10 &#43;0800</lastBuildDate><atom:link href="https://lanhuli.top/tags/swing/" rel="self" type="application/rss+xml" /><item>
  <title>java swing学习</title>
  <link>https://lanhuli.top/e70c6a493b0d/</link>
  <pubDate>Sun, 30 Jul 2023 03:18:10 &#43;0800</pubDate>
  <author>蓝狐狸</author>
  <guid>https://lanhuli.top/e70c6a493b0d/</guid>
  <description><![CDATA[Swing包括了图形用户界面（GUI）器件如：文本框，按钮，分隔窗格和表。我在学习Swing时遇到了许多困惑，在这里记录一下，以便后续回顾。
JFrame和JPanel详解 刚学习的时候，跟着老师敲，但没有理解这两个东西，导致后面一直搞不清楚Swing的逻辑，查了些资料，现在有点明白了。
举一个不太准确的例子：假设Swing编程就像是我们在画画，我们画的圆圈，方块，文字就相当于Swing中的一个个组件。JFrame相当于一块透明的玻璃板，我们是没有办法在上面直接画画，JPanel相当于一张白纸，把这张白纸放到玻璃板上，就可以在纸上画出圆圈，方块和文字了。
JFrame是不能直接放置组件的，因为JFrame 不是一个容器，它只是一个框架。JFrame 有一个 Content Pane，窗口能显示的所有组件都是添加在这个 Content Pane 中。JFrame 提供了两个方法：getContentPane 和 setContentPane 就是用于获取和设置其 Content Pane 的。
先说setContentPane方法，常见于这样写：建立一个Jpanel中间容器，把组件添加到容器中，用setContentPane方法把该容器置为JFrame的内容面板
1 2 3 4 5 6 7 8 9 10 11 12 13 public class MyFrame3 extends JFrame { public MyFrame3(String tittle) { super(tittle); //创建一个面板，作为容器绑定到窗口上，这是不可见的 JPanel jPanel = new JPanel(); this.setContentPane(jPanel); JButton button = new JButton(&#34;按钮&#34;); jPanel.add(button); this.setVisible(true); // 设置可见 } } 再说说getContentPane方法，常见于这样写：不用建立中间容器，直接用getContentPane().add()方式添加组件。getContentPane是得到了jframe的内容面板。
1 2 3 4 5 6 7 public class TestFrame extends JFrame{ public TestFrame() { JLabel label = new JLabel(&#34;lableTest&#34;); getContentPane().]]></description>
</item>
</channel>
</rss>
